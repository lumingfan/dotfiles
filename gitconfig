[alias]
	st = status 
	br = branch -vv
	ci = commit -v
	co = checkout
	dis = diff --stat
	diw = diff --color-words
	dhs = diff HEAD~ --stat
	dhw = diff HEAD~ --color-words
	count = diff --stat "4b825dc642cb6eb9a060e54bf8d69288fbee4904" # hash of empty tree
	credit = shortlog -sn
	linecredit = ! "lc() { git ls-tree --name-only -z -r HEAD | xargs -0 -n1 git diff --no-index --numstat /dev/null 2>/dev/null | grep -v '^-' | cut -f 3- | cut -d ' ' -f 3- | xargs -n1 git blame --line-porcelain | grep '^author ' | cut -d ' ' -f 2- | sort | uniq -c | sort -nr; }; lc"
	cc = rev-list HEAD --count
	cca = rev-list --all --count
	lg = log -p
	gr = log --graph --format=line # graph
	grd = log --graph --format=detail # graph detail
	gra = log --graph --format=line --all # graph all
	grad = log --graph --format=detail --all # graph all in detail
    hist = log --pretty=format:'%C(bold yellow)%h%C(reset) %C(bold green)%ad%C(reset) %C(red)|%C(reset) %C(black)%s%C(reset) %C(bold cyan)%d%C(reset) %C(reset)%C(bold magenta)[%an]%C(reset)' --graph --date=short 
	sf = show --format=fuller --show-signature
	sfw = show --format=fuller --color-words
	sfs = show --format=fuller --stat
	showtool = ! "st() { if [ -z $1 ]; then c='HEAD'; else c=$1; fi; git difftool $c~..$c; }; st"
	info = ! "inf() { if git rev-parse ${1} >/dev/null 2>&1; then git cat-file -p $(git rev-parse ${1}); else echo Invalid object; fi }; inf"
	cleanall = clean -fdx # this is dangerous, so it's intentionally long to type
	stsh = stash --keep-index
	staash = stash --include-untracked
	update-submodules = submodule update --init --recursive
	upgrade-submodules = submodule update --init --remote
	empty-tree-hash = hash-object -t tree /dev/null
	root = rev-parse --show-toplevel
	tar = ! "tar() { git archive --format tar --prefix=\"${PWD##*/}/\" HEAD -o ${1}; }; tar"
	targz = ! "targz() { git archive --format tar.gz --prefix=\"${PWD##*/}/\" HEAD -o ${1}; }; targz"
	zip = ! "zip() { git archive --format zip --prefix=\"${PWD##*/}/\" HEAD -o ${1}; }; zip"

[init]
	defaultBranch = master

[diff]
	mnemonicPrefix = true
	wordRegex = "[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+"
	compactionHeuristic = true

[color]
	ui = auto

[color "grep"]
	match = cyan bold
	selected = blue
	context = normal
	filename = magenta
	linenumber = green
	separator = yellow
	function = blue

[pretty]
	line = "%C(auto)%h %<|(60,trunc)%s %C(green)%ad%C(auto)%d"
	detail = "%C(auto)%h %s%n  %C(yellow)by %C(blue)%an %C(magenta)<%ae> [%G?] %C(green)%ad%n %C(auto)%d%n"

[merge]
	defaultToUpstream = true
	tool = vimdiff

[pull]
	ff = only

[mergetool]
	keepBackup = false

[push]
	default = upstream

[grep]
	lineNumber = true

[advice]
	detachedHead = false
	waitingForEditor = false

[user]
	useConfigOnly = true
	email = 2507550027@qq.com
	name = lumingfan

[http]
	cookieFile = ~/.gitcookies

[core]
	excludesfile = ~/.gitignore_global

# [url "https://github.com/"]
# 	insteadOf = git://github.com/

# Allow local customizations in the .gitconfig_local file
[include]
	path = ~/.gitconfig_local
[credential "https://github.com"]
	helper = 
	helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = 
	helper = !/usr/bin/gh auth git-credential
